#!/bin/bash
# Script to install and configure onboard for ConsultEase
# This script should be run on the target device

echo "Installing and configuring onboard for ConsultEase..."

# Check if running as root
if [ "$EUID" -eq 0 ]; then
  echo "This script should not be run as root. Please run as a normal user."
  exit 1
fi

# Install onboard if not already installed
if ! command -v onboard &> /dev/null; then
    echo "Onboard not found, installing..."
    sudo apt update
    sudo apt install -y onboard

    if ! command -v onboard &> /dev/null; then
        echo "Failed to install onboard. Please check your package manager and try again."
        exit 1
    fi
    echo "Onboard installed successfully."
else
    echo "Onboard is already installed."
fi

# Remove squeekboard if it's installed (to avoid conflicts)
if command -v squeekboard &> /dev/null; then
    echo "Squeekboard found. Disabling squeekboard service..."

    # Disable squeekboard service if it exists
    if systemctl --user is-active squeekboard.service &> /dev/null; then
        systemctl --user stop squeekboard.service
        systemctl --user disable squeekboard.service
        echo "Squeekboard service stopped and disabled."
    fi

    # We don't remove the package as it might be needed by other applications
    echo "Note: Squeekboard package was not removed, but the service has been disabled."
fi

# Create onboard configuration directory
echo "Configuring onboard..."
mkdir -p ~/.config/autostart
cat > ~/.config/autostart/onboard-autostart.desktop << EOF
[Desktop Entry]
Type=Application
Name=Onboard
Exec=onboard --size=small --layout=Phone --enable-background-transparency --theme=Nightshade
Comment=Flexible on-screen keyboard
EOF

# Create onboard configuration directory
mkdir -p ~/.config/onboard

# Create onboard configuration file with touch-friendly settings
cat > ~/.config/onboard/onboard.conf << EOF
[main]
layout=Phone
theme=Nightshade
key-size=small
enable-background-transparency=true
show-status-icon=true
start-minimized=false
show-tooltips=false
auto-show=true
auto-show-delay=500
auto-hide=true
auto-hide-delay=1000
xembed-onboard=true
enable-touch-input=true
touch-feedback-enabled=true
touch-feedback-size=small
EOF

# Set environment variables for proper keyboard operation
echo "Setting up environment variables..."
mkdir -p ~/.config/environment.d/
cat > ~/.config/environment.d/consultease-keyboard.conf << EOF
# ConsultEase keyboard environment variables
GDK_BACKEND=wayland,x11
QT_QPA_PLATFORM=wayland;xcb
ONBOARD_ENABLE_TOUCH=1
ONBOARD_XEMBED=1
CONSULTEASE_KEYBOARD=onboard
# Disable squeekboard
SQUEEKBOARD_DISABLE=1
EOF

# Also add to .bashrc for immediate effect
if ! grep -q "CONSULTEASE_KEYBOARD" ~/.bashrc; then
    echo "Adding environment variables to .bashrc..."
    cat >> ~/.bashrc << EOF

# ConsultEase keyboard environment variables
export GDK_BACKEND=wayland,x11
export QT_QPA_PLATFORM=wayland;xcb
export ONBOARD_ENABLE_TOUCH=1
export ONBOARD_XEMBED=1
export CONSULTEASE_KEYBOARD=onboard
# Disable squeekboard
export SQUEEKBOARD_DISABLE=1
EOF
fi

# Create .env file for ConsultEase if it doesn't exist
if [ -d "../central_system" ]; then
    echo "Creating/updating .env file for ConsultEase..."
    if [ ! -f "../.env" ]; then
        cat > "../.env" << EOF
# ConsultEase Configuration
# Generated by install_onboard.sh on $(date)

# Keyboard Configuration
CONSULTEASE_KEYBOARD=onboard
SQUEEKBOARD_DISABLE=1

# Other settings
CONSULTEASE_THEME=light
EOF
        echo ".env file created."
    else
        # Update existing .env file
        if ! grep -q "CONSULTEASE_KEYBOARD=onboard" "../.env"; then
            echo "CONSULTEASE_KEYBOARD=onboard" >> "../.env"
            echo "Added CONSULTEASE_KEYBOARD to .env file."
        fi
        if ! grep -q "SQUEEKBOARD_DISABLE=1" "../.env"; then
            echo "SQUEEKBOARD_DISABLE=1" >> "../.env"
            echo "Added SQUEEKBOARD_DISABLE to .env file."
        fi
    fi
fi

# Create keyboard management scripts
echo "Creating keyboard management scripts..."

# Create keyboard toggle script
cat > ~/keyboard-toggle.sh << EOF
#!/bin/bash
# Toggle onboard keyboard visibility

# First, make sure squeekboard is not running
if command -v squeekboard &> /dev/null; then
    if pgrep -f squeekboard > /dev/null; then
        pkill -f squeekboard
        echo "Squeekboard killed"
    fi

    # Also try DBus method to hide squeekboard
    if command -v dbus-send &> /dev/null; then
        dbus-send --type=method_call --dest=sm.puri.OSK0 /sm/puri/OSK0 sm.puri.OSK0.SetVisible boolean:false
    fi
fi

# Now toggle onboard
if pgrep -f onboard > /dev/null; then
    pkill -f onboard
    echo "Onboard keyboard hidden"
else
    onboard --size=small --layout=Phone --enable-background-transparency --theme=Nightshade &
    echo "Onboard keyboard shown"
fi
EOF
chmod +x ~/keyboard-toggle.sh

# Create keyboard show script
cat > ~/keyboard-show.sh << EOF
#!/bin/bash
# Force show onboard keyboard

# First, make sure squeekboard is not running
if command -v squeekboard &> /dev/null; then
    pkill -f squeekboard

    # Also try DBus method to hide squeekboard
    if command -v dbus-send &> /dev/null; then
        dbus-send --type=method_call --dest=sm.puri.OSK0 /sm/puri/OSK0 sm.puri.OSK0.SetVisible boolean:false
    fi
fi

# Kill any existing onboard instances
pkill -f onboard

# Start onboard with appropriate options
onboard --size=small --layout=Phone --enable-background-transparency --theme=Nightshade &
echo "Onboard keyboard shown"
EOF
chmod +x ~/keyboard-show.sh

# Create keyboard hide script
cat > ~/keyboard-hide.sh << EOF
#!/bin/bash
# Force hide all on-screen keyboards

# Hide onboard
if pgrep -f onboard > /dev/null; then
    pkill -f onboard
    echo "Onboard keyboard hidden"
fi

# Hide squeekboard if it exists
if command -v squeekboard &> /dev/null; then
    if pgrep -f squeekboard > /dev/null; then
        pkill -f squeekboard
        echo "Squeekboard hidden"
    fi

    # Also try DBus method
    if command -v dbus-send &> /dev/null; then
        dbus-send --type=method_call --dest=sm.puri.OSK0 /sm/puri/OSK0 sm.puri.OSK0.SetVisible boolean:false
    fi
fi
EOF
chmod +x ~/keyboard-hide.sh

# Make sure squeekboard is not running
if command -v squeekboard &> /dev/null; then
    echo "Stopping squeekboard if running..."
    pkill -f squeekboard

    # Also try DBus method
    if command -v dbus-send &> /dev/null; then
        dbus-send --type=method_call --dest=sm.puri.OSK0 /sm/puri/OSK0 sm.puri.OSK0.SetVisible boolean:false
    fi

    # Disable squeekboard service if it exists
    if systemctl --user is-active squeekboard.service &> /dev/null; then
        systemctl --user stop squeekboard.service
        systemctl --user disable squeekboard.service
        echo "Squeekboard service stopped and disabled."
    fi
fi

# Start onboard
echo "Starting onboard..."
pkill -f onboard
onboard --size=small --layout=Phone --enable-background-transparency --theme=Nightshade &

echo "Onboard installation and configuration complete!"
echo ""
echo "Keyboard management scripts created:"
echo "  ~/keyboard-toggle.sh - Toggle keyboard visibility"
echo "  ~/keyboard-show.sh - Force show keyboard"
echo "  ~/keyboard-hide.sh - Force hide keyboard"
echo ""
echo "If the keyboard doesn't appear automatically, try:"
echo "1. Run ~/keyboard-show.sh to manually show it"
echo "2. Press F5 in the application to toggle the keyboard"
echo ""
echo "Squeekboard has been disabled and replaced with onboard as per user preference."
echo "For changes to fully take effect, please reboot your system."
